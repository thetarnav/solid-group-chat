/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	'/': {
		get: {
			responses: {
				/** OK */
				200: unknown
			}
		}
	}
	'/chats': {
		get: {
			parameters: {
				query: {
					/** Chat ID */
					id?: parameters['rowFilter.chats.id']
					created_at?: parameters['rowFilter.chats.created_at']
					/** UserID of the user who owns this chat. */
					owner?: parameters['rowFilter.chats.owner']
					/** List of messages sent. */
					messages?: parameters['rowFilter.chats.messages']
					/** List with UserIDs of users that joined this chat. */
					members?: parameters['rowFilter.chats.members']
					/** What's the name of the chat */
					name?: parameters['rowFilter.chats.name']
					/** Filtering Columns */
					select?: parameters['select']
					/** Ordering */
					order?: parameters['order']
					/** Limiting and Pagination */
					offset?: parameters['offset']
					/** Limiting and Pagination */
					limit?: parameters['limit']
				}
				header: {
					/** Limiting and Pagination */
					Range?: parameters['range']
					/** Limiting and Pagination */
					'Range-Unit'?: parameters['rangeUnit']
					/** Preference */
					Prefer?: parameters['preferCount']
				}
			}
			responses: {
				/** OK */
				200: {
					schema: definitions['chats'][]
				}
				/** Partial Content */
				206: unknown
			}
		}
		post: {
			parameters: {
				body: {
					/** chats */
					chats?: definitions['chats']
				}
				query: {
					/** Filtering Columns */
					select?: parameters['select']
				}
				header: {
					/** Preference */
					Prefer?: parameters['preferReturn']
				}
			}
			responses: {
				/** Created */
				201: unknown
			}
		}
		delete: {
			parameters: {
				query: {
					/** Chat ID */
					id?: parameters['rowFilter.chats.id']
					created_at?: parameters['rowFilter.chats.created_at']
					/** UserID of the user who owns this chat. */
					owner?: parameters['rowFilter.chats.owner']
					/** List of messages sent. */
					messages?: parameters['rowFilter.chats.messages']
					/** List with UserIDs of users that joined this chat. */
					members?: parameters['rowFilter.chats.members']
					/** What's the name of the chat */
					name?: parameters['rowFilter.chats.name']
				}
				header: {
					/** Preference */
					Prefer?: parameters['preferReturn']
				}
			}
			responses: {
				/** No Content */
				204: never
			}
		}
		patch: {
			parameters: {
				query: {
					/** Chat ID */
					id?: parameters['rowFilter.chats.id']
					created_at?: parameters['rowFilter.chats.created_at']
					/** UserID of the user who owns this chat. */
					owner?: parameters['rowFilter.chats.owner']
					/** List of messages sent. */
					messages?: parameters['rowFilter.chats.messages']
					/** List with UserIDs of users that joined this chat. */
					members?: parameters['rowFilter.chats.members']
					/** What's the name of the chat */
					name?: parameters['rowFilter.chats.name']
				}
				body: {
					/** chats */
					chats?: definitions['chats']
				}
				header: {
					/** Preference */
					Prefer?: parameters['preferReturn']
				}
			}
			responses: {
				/** No Content */
				204: never
			}
		}
	}
	'/users': {
		get: {
			parameters: {
				query: {
					uuid?: parameters['rowFilter.users.uuid']
					username?: parameters['rowFilter.users.username']
					avatar?: parameters['rowFilter.users.avatar']
					/** Filtering Columns */
					select?: parameters['select']
					/** Ordering */
					order?: parameters['order']
					/** Limiting and Pagination */
					offset?: parameters['offset']
					/** Limiting and Pagination */
					limit?: parameters['limit']
				}
				header: {
					/** Limiting and Pagination */
					Range?: parameters['range']
					/** Limiting and Pagination */
					'Range-Unit'?: parameters['rangeUnit']
					/** Preference */
					Prefer?: parameters['preferCount']
				}
			}
			responses: {
				/** OK */
				200: {
					schema: definitions['users'][]
				}
				/** Partial Content */
				206: unknown
			}
		}
		post: {
			parameters: {
				body: {
					/** users */
					users?: definitions['users']
				}
				query: {
					/** Filtering Columns */
					select?: parameters['select']
				}
				header: {
					/** Preference */
					Prefer?: parameters['preferReturn']
				}
			}
			responses: {
				/** Created */
				201: unknown
			}
		}
		delete: {
			parameters: {
				query: {
					uuid?: parameters['rowFilter.users.uuid']
					username?: parameters['rowFilter.users.username']
					avatar?: parameters['rowFilter.users.avatar']
				}
				header: {
					/** Preference */
					Prefer?: parameters['preferReturn']
				}
			}
			responses: {
				/** No Content */
				204: never
			}
		}
		patch: {
			parameters: {
				query: {
					uuid?: parameters['rowFilter.users.uuid']
					username?: parameters['rowFilter.users.username']
					avatar?: parameters['rowFilter.users.avatar']
				}
				body: {
					/** users */
					users?: definitions['users']
				}
				header: {
					/** Preference */
					Prefer?: parameters['preferReturn']
				}
			}
			responses: {
				/** No Content */
				204: never
			}
		}
	}
}

export interface definitions {
	chats: {
		/**
		 * Chat ID
		 *
		 * Note:
		 * This is a Primary Key.<pk/>
		 */
		id: number
		created_at?: string
		/** UserID of the user who owns this chat. */
		owner: string
		/** List of messages sent. */
		messages: {
			from: string
			content: string
			when: number
		}[]
		/** List with UserIDs of users that joined this chat. */
		members: string[]
		/** What's the name of the chat */
		name: string
	}
	/** list with usernames and avatars */
	users: {
		/**
		 * Note:
		 * This is a Primary Key.<pk/>
		 */
		uuid: string
		username?: string
		avatar?: string
	}
}

export interface parameters {
	/** Preference */
	preferParams: 'params=single-object'
	/** Preference */
	preferReturn: 'return=representation' | 'return=minimal' | 'return=none'
	/** Preference */
	preferCount: 'count=none'
	/** Filtering Columns */
	select: string
	/** On Conflict */
	on_conflict: string
	/** Ordering */
	order: string
	/** Limiting and Pagination */
	range: string
	/** Limiting and Pagination */
	rangeUnit: string
	/** Limiting and Pagination */
	offset: string
	/** Limiting and Pagination */
	limit: string
	/** chats */
	'body.chats': definitions['chats']
	/** Chat ID */
	'rowFilter.chats.id': string
	'rowFilter.chats.created_at': string
	/** UserID of the user who owns this chat. */
	'rowFilter.chats.owner': string
	/** List of messages sent. */
	'rowFilter.chats.messages': string
	/** List with UserIDs of users that joined this chat. */
	'rowFilter.chats.members': string
	/** What's the name of the chat */
	'rowFilter.chats.name': string
	/** users */
	'body.users': definitions['users']
	'rowFilter.users.uuid': string
	'rowFilter.users.username': string
	'rowFilter.users.avatar': string
}
